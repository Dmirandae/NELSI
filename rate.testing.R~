
library(phangorn)
library(geiger)

t1 <- sim.bdtree(b = 1, d = 0, n = 10, stop = "taxa")

setwd("ready_functions")
for(i in dir()) source(i)
setwd("..")

r1 <- simulate.tdep.ho(t1, params = list(mu = 0.015, srate = 0.035, lambda = 0.2, noise = 0.0002))

plot.rates.time(rate.sim.object = r1, col.lineages = rainbow(10), type ="s")

system("sleep 2")

r2 <- simulate.tdep.ho(t1, params = list(mu = 0.01, srate = 0.001, lambda = 5, noise = 0.00001))

plot.rates.time(rate.sim.object = r2, col.lineages = rainbow(10), type = "s")

system("sleep 2")

###
# Testing with an heterochronous tree

t2 <- rtree(10)

t2.factor <- max(allnode.times(t2)) / 50 

t2$edge.length <- t2$edge.length / t2.factor

r3 <- simulate.autocor.kishino(t2)

plot.rates.time(rate.sim.object = r3, col.lineages = rainbow(10), type = "s")

system("sleep 2")

###
# Testing with an heterochronous tree

t4 <- sim.bdtree(b = 10, d = 0, n = 50, stop = "taxa")

t4.factor <- max(allnode.times(t4)) / 50 

t4$edge.length <- t4$edge.length / t4.factor

lin.rate <- function(time) return((2*time) + 0.001)

r4 <- simulate.tdep.generic(t4, noise = 0.000001, fun = lin.rate)

plot.rates.time(rate.sim.object = r4, col.lineages = rainbow(10), type = "s")

